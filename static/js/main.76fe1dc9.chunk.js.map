{"version":3,"sources":["Header/index.js","Section/styled.js","Section/index.js","Form/styled.js","Form/index.js","Footer/styled.js","Footer/index.js","Table/styled.js","Table/index.js","Time/styled.js","Time/useCurrentDate.js","Time/index.js","styled.js","App.js","useRatesData.js","serviceWorker.js","GlobalStyle.js","index.js"],"names":["Header","Tile","styled","section","Section","header","body","extraContent","FormContainer","form","FormInput","input","InputDescription","FormSelect","Button","button","Form","calculate","currency","useState","amount","setAmount","firstCurrency","setFirstCurrency","secondCurrency","setSecondCurrency","sortedRates","Object","entries","sort","onSubmit","event","preventDefault","as","value","onChange","target","Number","type","min","required","map","key","FooterArea","footer","Footer","TableContainer","table","Caption","caption","Thead","thead","TableHeading","th","TableRow","tr","Tbody","tbody","TableCell","td","Table","date","rates","scope","toFixed","DateFormat","p","useCurrentDate","Date","setDate","useEffect","intervalId","setInterval","clearInterval","Time","toLocaleDateString","undefined","month","weekday","day","year","hour","minute","second","newDate","Div","div","Main","main","SectionContainer","Result","App","error","ratesData","setRatesData","axios","get","then","response","data","catch","useRatesData","result","setResult","endResult","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.76fe1dc9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Przelicznik walut</h1>\r\n      <p>\r\n        Podaj ile potrzebujesz lub posiadasz gotówki, a nastepnie nasz\r\n        kalkulator obliczy ile dostaniesz w wybranej przez Ciebie walucie.\r\n      </p>\r\n    </>\r\n  )\r\n}\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nexport const Tile = styled.section`\r\n  max-width: 600px;\r\n  padding: 20px;\r\n`","import React from \"react\";\r\nimport {Tile} from \"./styled\"\r\n\r\nconst Section = ({header, body, extraContent}) => {\r\n    return (\r\n        <Tile>\r\n                {header}\r\n                {body}\r\n                {extraContent}\r\n        </Tile>\r\n    )\r\n}\r\n\r\nexport default Section;","import styled from 'styled-components'\r\n\r\nexport const FormContainer = styled.form`\r\n  max-width: 350px;\r\n  margin: 20px auto;\r\n`\r\nexport const FormInput = styled.input`\r\n  padding: 10px;\r\n  margin: 2px;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  border: 2px solid teal;\r\n  font-size: 14px;\r\n  width: 90px;\r\n  display: inline-block;\r\n`\r\nexport const InputDescription = styled(FormInput)`\r\n  color: #fff;\r\n  background-color: teal;\r\n`\r\nexport const FormSelect = styled(FormInput)``\r\n\r\nexport const Button = styled.button`\r\n  background-color: teal;\r\n  outline: none;\r\n  border: 2px solid teal;\r\n  padding: 10px;\r\n  color: #fff;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  width: 90px;\r\n  text-transform: uppercase;\r\n  font-size: 15px;\r\n`\r\n","import React, { useState } from \"react\";\r\nimport {FormContainer, FormInput, InputDescription, FormSelect, Button} from \"./styled\"\r\n\r\nconst Form = ({ calculate, currency }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [firstCurrency, setFirstCurrency] = useState(\"PLN\");\r\n  const [secondCurrency, setSecondCurrency] = useState(\"EUR\");\r\n\r\n  const chooseFirstCurrency = ({ target }) => {\r\n    setFirstCurrency(target.value);\r\n  }\r\n  const chooseSecondCurrency = ({ target }) => {\r\n    setSecondCurrency(target.value);\r\n  }\r\n  const objectEntries = Object.entries(currency);\r\n  const sortedRates = objectEntries.sort()\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculate(amount, firstCurrency, secondCurrency);\r\n  };\r\n  return (\r\n    <FormContainer\r\n      onSubmit={onFormSubmit}>\r\n      <p>\r\n        <InputDescription as=\"span\">Mam:</InputDescription>\r\n        <FormInput value={amount}\r\n          onChange={({ target }) => { setAmount(Number(target.value)) }}\r\n          type=\"number\"\r\n          min=\"1\"\r\n          required\r\n        />\r\n        <FormSelect as=\"select\" value={firstCurrency}\r\n          onChange={chooseFirstCurrency}>\r\n            {sortedRates.map((currency) => (\r\n    <option key={currency[0]}>{currency[0]}</option>\r\n  ))}\r\n        </FormSelect>\r\n      </p>\r\n      <p>\r\n        <InputDescription as=\"span\">Na:</InputDescription>\r\n        <FormSelect as=\"select\" value={secondCurrency}\r\n          onChange={chooseSecondCurrency}>\r\n             {sortedRates.map((currency) => (\r\n    <option key={currency[0]}>{currency[0]}</option>\r\n  ))}\r\n        </FormSelect>\r\n        <Button>Przelicz</Button>\r\n      </p>\r\n    </FormContainer>\r\n  )\r\n};\r\nexport default Form;\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const FooterArea = styled.footer`\r\n  font-size: 12px;\r\n  background-color: teal;\r\n  color: #fff;\r\n`\r\n","import React from 'react'\r\nimport { FooterArea } from './styled'\r\n\r\nconst Footer = () => {\r\n  return <FooterArea>Kamila Duda © Wszelkie prawa zastrzeżone</FooterArea>\r\n}\r\nexport default Footer\r\n","import styled from 'styled-components'\r\n\r\nexport const TableContainer = styled.table`\r\n  border-collapse: separate;\r\n  font-size: 15px;\r\n  border: 1px solid #000;\r\n  border-radius: 10px;\r\n  border-spacing: 0px;\r\n`\r\nexport const Caption = styled.caption`\r\n  font-size: 13px;\r\n`\r\nexport const Thead = styled.thead`\r\n  border-top-right-radius: 10px;\r\n  display: block;\r\n  background-color: teal;\r\n  border-top-left-radius: 10px;\r\n`\r\nexport const TableHeading = styled.th`\r\n  width: 100px;\r\n  padding: 5px;\r\n  &:first-child {\r\n    border-right: 1px solid #000;\r\n    width: 99px;\r\n  }\r\n`\r\nexport const TableRow = styled.tr`\r\n&:nth-child(even) {\r\n    background-color: #0000002b;\r\n  }\r\n`\r\nexport const Tbody = styled.tbody`\r\n  display: block;\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  height: 300px;\r\n`\r\nexport const TableCell = styled.td`\r\n  padding: 15px;\r\n  width: 100px;\r\n  font-weight: bold;\r\n  &:first-child {\r\n    border-right: 1px solid black;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport {TableContainer, Caption, Thead, TableHeading, Tbody, TableRow, TableCell} from \"./styled\"\r\n\r\nconst Table = ({date, rates}) => {\r\n  const objectEntries = Object.entries(rates);\r\n  const sortedRates = objectEntries.sort()\r\n  return (\r\n    <TableContainer>\r\n      <Caption>\r\n        Kurs z dnia: {date} z European Central Bank.\r\n      </Caption>\r\n      <Thead>\r\n        <tr>\r\n          <TableHeading scope='col'>\r\n            Waluta\r\n          </TableHeading>\r\n          <TableHeading scope='col'>\r\n            Kurs w PLN\r\n          </TableHeading>\r\n        </tr>\r\n      </Thead>\r\n      <Tbody>\r\n        {sortedRates.map((rates) => (\r\n          <TableRow key={rates[0]}>\r\n            <TableCell>\r\n              {rates[0]}\r\n            </TableCell>\r\n            <TableCell>{(1/rates[1]).toFixed(2)}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </Tbody>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default Table\r\n","import styled from 'styled-components'\r\n\r\nexport const DateFormat = styled.p`\r\n  text-align: right;\r\n  padding: 5px;\r\n  font-family: 'Courier New', Courier, monospace;\r\n  font-size: 13px;\r\n  color: teal;\r\n  font-weight: bold;\r\n`\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date())\r\n    }, 1000)\r\n\r\n    return () => {\r\n      clearInterval(intervalId)\r\n    }\r\n  }, [])\r\n  return date\r\n}\r\nexport default useCurrentDate\r\n","import React from 'react'\r\nimport {DateFormat} from \"./styled\"\r\nimport useCurrentDate from \"./useCurrentDate\"\r\n\r\nconst newDate = (date) => date.toLocaleDateString(undefined, {\r\n  month: 'long',\r\n  weekday: 'long',\r\n  day: 'numeric',\r\n  year: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric'\r\n})\r\n\r\nconst Time = () => {\r\n  const date = useCurrentDate();\r\n\r\n  return <DateFormat>Dzisiaj jest {newDate(date)}</DateFormat>\r\n}\r\n\r\nexport default Time;\r\n","import styled from 'styled-components'\r\n\r\nexport const Div = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  height: 100vh;\r\n`\r\n\r\nexport const Main = styled.main`\r\n  margin: 40px auto;\r\n  flex-basis: 100%;\r\n  max-width: 900px;\r\n  background-color: #faf0c2c2;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 20px #000;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  @media (max-width: 414px) {\r\n    margin: 8px;\r\n  }\r\n`\r\n\r\nexport const SectionContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  @media (max-width: 786px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nexport const Result = styled.p`\r\n  font-weight: bold;\r\n  color: #000;\r\n  height: 35px;\r\n  padding-bottom: 30px;\r\n  font-size: 30px;\r\n`\r\n","import React, { useState } from 'react'\nimport Header from './Header'\nimport Section from './Section'\nimport Form from './Form'\nimport Footer from './Footer'\nimport Table from './Table'\nimport Time from './Time'\nimport { Div, Main, SectionContainer, Result } from './styled'\nimport {useRatesData} from \"./useRatesData\"\n\nfunction App () {\n  const { date, rates, error } = useRatesData();\n  const [result, setResult] = useState('')\n  const calculate = (amount, firstCurrency, secondCurrency) => {\n    const endResult = (amount * rates[secondCurrency]) / rates[firstCurrency]\n    setResult(`${endResult.toFixed(2)} ${secondCurrency}`)\n  }\n  return (\n    <Div>\n      <Main>\n        <Time />\n        <SectionContainer>\n        {rates ? (\n          <>\n          <Section \n          body={<Table date={date} rates={rates} />} />\n          <Section\n          header={<Header />} \n          body= {<Form \n              calculate={calculate} \n              currency={rates} />}\n              extraContent={<Result>{`${result}`}</Result>}\n          />\n          </>)\n          : !error ? (\n            \"Proszę chwilę zaczekać, pobieramy najnowsze kursy walut\"\n          ) : (\n            \"Ups... coś poszło nie tak. Sprawdź połączenie z internetem lub spróbuj później\"\n          )}\n        </SectionContainer>\n      </Main>\n      <Footer />\n    </Div>\n  )\n}\n\nexport default App\n","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useRatesData = () => {\r\n  const [ratesData, setRatesData] = useState({\r\n    date: [],\r\n    rates: \"\",\r\n    error: false,\r\n  })\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://api.exchangeratesapi.io/latest?base=PLN\")\r\n        .then(response => setRatesData({\r\n          date: response.data.date,\r\n          rates: response.data.rates\r\n      }))\r\n        .catch(() => setRatesData(\r\n          {\r\n          error: true\r\n        }))\r\n  }, [])\r\n  return ratesData\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n  box-sizing: border-box;\r\n}\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\nbody{\r\n  font-family: 'Muli', sans-serif;\r\n  line-height: 1.5;\r\n  text-align: center;\r\n  margin: 0;\r\n  background-image: url(\"https://i.ibb.co/YkMq9Rn/bg.jpg\");\r\n  background-size: cover;\r\n  height: 100%;\r\n}\r\n::-webkit-scrollbar {\r\n  width: 20px;\r\n}\r\n::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px grey; \r\n  border-radius: 10px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  background: teal; \r\n  border-radius: 10px;\r\n}\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #00a7a7; \r\n  cursor: pointer;\r\n}\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyle from \"./GlobalStyle\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}