{"version":3,"sources":["Header/index.js","Section/index.js","Form/index.js","Footer/index.js","Table/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","Section","className","body","extraContent","Form","calculate","currency","useState","amount","setAmount","firstCurrency","setFirstCurrency","secondCurrency","setSecondCurrency","onClick","event","preventDefault","value","onChange","target","Number","type","min","required","autoFocus","name","Footer","Table","scope","src","alt","App","result","setResult","symbol","setSymbol","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a4604290.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h1>Przelicznik walut</h1>\r\n            <p>Podaj ile potrzebujesz lub posiadasz gotówki, a nastepnie nasz kalkulator obliczy ile dostaniesz w wybranej przez\r\n                Ciebie walucie.</p>\r\n        </>\r\n    )\r\n};\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({className, body, extraContent}) => {\r\n    return (\r\n        <section className={className}>\r\n                {body}\r\n                {extraContent}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section;","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({calculate, currency}) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [firstCurrency, setFirstCurrency] = useState(1);\r\n  const [secondCurrency, setSecondCurrency] = useState(1);\r\n \r\n  const chooseFirstCurrency = ({target}) => {\r\n    setFirstCurrency(target.value);\r\n  }\r\n  const chooseSecondCurrency = ({target}) => {\r\n    setSecondCurrency(target.value);\r\n    \r\n  }\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculate(amount, firstCurrency, secondCurrency);\r\n    currency(secondCurrency);\r\n    //setSymbol(symbol);\r\n  };\r\n    \r\n  return (\r\n    <form className=\"currencyConverter__form\"\r\n    onClick={onFormSubmit}>\r\n      <p className=\"form__row\">\r\n        <span className=\"form__inputMark\">Mam:</span>\r\n        <input value={amount}\r\n        onChange={({target}) => {setAmount(Number(target.value))}} className=\"form__field js-amount\" \r\n        type=\"number\" \r\n        min=\"1\" \r\n        required\r\n        autoFocus />\r\n        <select value={firstCurrency}\r\n        onChange={chooseFirstCurrency}\r\n        className=\"form__select\" name=\"firstOption\">\r\n          <option value=\"1\">PLN</option>\r\n          <option value=\"4.45\">EUR</option>\r\n          <option value=\"3.96\">USD</option>\r\n          <option value=\"4.97\">GBP</option>\r\n        </select></p>\r\n      <p className=\"form__row\">\r\n        <span className=\"form__inputMark\">Na:</span>\r\n        <select value={secondCurrency}\r\n        onChange={chooseSecondCurrency} \r\n        className=\"form__select\" name=\"secondOption\">\r\n          <option value=\"1\">PLN</option>\r\n          <option value=\"4.45\">EUR</option>\r\n          <option value=\"3.96\">USD</option>\r\n          <option value=\"4.97\">GBP</option>\r\n        </select>\r\n        <button className=\"form__button\">Przelicz</button>\r\n      </p>\r\n    </form>\r\n  )\r\n};\r\nexport default Form; \r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            Kamila Duda &quot; Wszelkie prawa zastrzeżone\r\n        </footer>\r\n    )\r\n};\r\nexport default Footer;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Table = () => {\r\n    return (\r\n        <table className=\"exchangeRates__table\">\r\n            <caption className=\"table__title\">Kurs wymiany walut z dnia: 16.06.2020r</caption>\r\n            <thead>\r\n                <tr className=\"table__row\">\r\n                    <th className=\"table__heading\" scope=\"col\">Waluta</th>\r\n                    <th className=\"table__heading\" scope=\"col\">Kurs w PLN</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr className=\"table__row\">\r\n                    <td className=\"table__cell\"><img className=\"table__image\" src=\"https://i.ibb.co/9sLpkpS/euro.png\" alt=\"Euro flag\" />EUR</td>\r\n                    <td className=\"table__cell\">4.45</td>\r\n                </tr>\r\n                <tr className=\"table__row\">\r\n                    <td className=\"table__cell\"><img className=\"table__image\" src=\"https://i.ibb.co/7KGVPHp/usa.png\" alt=\"USA flag\" />USD</td>\r\n                    <td className=\"table__cell\">3.96</td>\r\n                </tr>\r\n                <tr className=\"table__row\">\r\n                    <td className=\"table__cell\"><img className=\"table__image\" src=\"https://i.ibb.co/6msQtYz/gb.png\" alt=\"British flag\" />GBP</td>\r\n                    <td className=\"table__cell\">4.97</td>\r\n                </tr>\r\n            </tbody>\r\n\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default Table;","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Section from \"./Section\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport Table from \"./Table\";\n\nfunction App() {\n  const [result, setResult] = useState(\"\");\n  const calculate = (amount, firstCurrency, secondCurrency) => {\n    const endResult = amount*firstCurrency/secondCurrency;\n    setResult(endResult.toFixed(2));\n  }\n  const [symbol, setSymbol] = useState(\"PLN\");\n  const currency = (secondCurrency) => {\n    switch(secondCurrency){\n      case \"4.45\":\n        setSymbol(\"EUR\");\n        break;\n      case \"3.96\":\n        setSymbol(\"USD\");\n        break;\n      case \"4.97\":\n        setSymbol(\"GBP\");\n        break;\n      default:\n        setSymbol(\"PLN\");\n        break;\n    }\n  }\n  return (\n    <> \n    <main className=\"container\">\n        <Header /> \n        <Section className={\"exchangeRates\"}\n        body={<Table />} \n        />\n        <Section className={\"currencyConverter\"}\n        body={<Form calculate={calculate}\n        currency={currency} />}\n        extraContent={\n          <p className=\"currencyConverter__result\">{result}{symbol}\n          </p>} \n        />\n    </main>\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}